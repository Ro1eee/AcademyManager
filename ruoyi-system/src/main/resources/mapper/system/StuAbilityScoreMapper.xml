<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StuAbilityScoreMapper">

    <resultMap id="gpaResultMap" type="GpaResultDTO">
        <result property="studentId" column="student_id"/>
        <result property="rawGpa" column="raw_gpa"/>
    </resultMap>
    <resultMap type="StuAbilityScore" id="StuAbilityScoreResult">
        <result property="studentId"    column="student_id"    />
        <result property="academy"    column="academy"    />
        <result property="academicScore"    column="academic_score"    />
        <result property="competitionScore"    column="competition_score"    />
        <result property="activityScore"    column="activity_score"    />
        <result property="lectureScore"    column="lecture_score"    />
        <result property="tutorialScore"    column="tutorial_score"    />
    </resultMap>

    <sql id="selectStuAbilityScoreVo">
        select student_id, academy, academic_score, competition_score, activity_score, lecture_score, tutorial_score from stu_ability_score
    </sql>

    <select id="selectStuAbilityScoreByStudentId" parameterType="String" resultMap="StuAbilityScoreResult">
        <include refid="selectStuAbilityScoreVo"/>
        where student_id = #{studentId}
    </select>
    <update id="updateStuAbilityScore" parameterType="StuAbilityScore">
        update stu_ability_score
        <trim prefix="SET" suffixOverrides=",">
            <if test="academy != null">academy = #{academy},</if>
            <if test="academicScore != null">academic_score = #{academicScore},</if>
            <if test="competitionScore != null">competition_score = #{competitionScore},</if>
            <if test="activityScore != null">activity_score = #{activityScore},</if>
            <if test="lectureScore != null">lecture_score = #{lectureScore},</if>
            <if test="tutorialScore != null">tutorial_score = #{tutorialScore},</if>
        </trim>
        where student_id = #{studentId}
    </update>
    <!-- 必修课加权平均GPA计算（支持增量查询） -->
    <select id="selectRequiredGPA" resultMap="gpaResultMap">
        SELECT
        student_id,
        ROUND(
        COALESCE(SUM(gpa * credit) / NULLIF(SUM(credit), 0), 0),
        2
        ) AS raw_gpa
        FROM (
        SELECT
        s.student_id,
        s.gpa,
        COALESCE(c.credit, 0) AS credit,
        ROW_NUMBER() OVER (
        PARTITION BY s.student_id, s.course_code
        ORDER BY
        CASE s.score_type
        WHEN '正考' THEN 1
        WHEN '重修' THEN 2
        WHEN '补考' THEN 3
        ELSE 4
        END,
        s.upload_time DESC
        ) AS rn
        FROM stu_score s
        INNER JOIN stu_course c
        ON s.course_code = c.course_code
        AND c.course_category = '必修'
        WHERE s.gpa IS NOT NULL
        <if test="studentIds != null and !studentIds.isEmpty()">
            AND s.student_id IN
            <foreach item="id" collection="studentIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        ) t
        WHERE rn = 1
        GROUP BY student_id
    </select>

    <!-- 批量更新绩点 -->
    <update id="batchUpdateAcademicScores">
        UPDATE stu_ability_score a
        JOIN (
        <foreach collection="list" item="item" separator=" UNION ALL ">
            SELECT
            #{item.studentId} AS student_id,
            #{item.academicScore} AS academic_score
        </foreach>
        ) t USING(student_id)
        SET a.academic_score = COALESCE(t.academic_score, 0)
    </update>

</mapper>