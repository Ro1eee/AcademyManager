<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StudentMapper">
    
    <resultMap type="Student" id="StudentResult">
        <result property="id"    column="id"    />
        <result property="studentId"    column="studentId"    />
        <result property="studentName"    column="studentName"    />
        <result property="academy"    column="academy"    />
        <result property="systemMajor"    column="systemMajor"    />
        <result property="major"    column="major"    />
        <result property="studentClass"    column="studentClass"    />
        <result property="divertForm"    column="divertForm"    />
        <result property="innovationClass"    column="innovationClass"    />
        <result property="studentSex"    column="studentSex"    />
        <result property="afterMajor"    column="afterMajor"    />
        <result property="afterAcademy"    column="afterAcademy"    />
        <result property="change_major_type"    column="change_major_type"    />
    </resultMap>

    <sql id="selectStudentVo">
        select id, studentId, studentName, academy, systemMajor, major, studentClass, divertForm, innovationClass, studentSex, afterMajor, afterAcademy,change_major_type from student
    </sql>

    <select id="selectStudentList" parameterType="Student" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="studentId != null  and studentId != ''"> and studentId = #{studentId}</if>
            <if test="studentName != null  and studentName != ''"> and studentName like concat('%', #{studentName}, '%')</if>
            <if test="academy != null  and academy != ''"> and academy = #{academy}</if>
            <if test="systemMajor != null  and systemMajor != ''"> and systemMajor = #{systemMajor}</if>
            <if test="major != null  and major != ''"> and major = #{major}</if>
            <if test="studentClass != null  and studentClass != ''"> and studentClass = #{studentClass}</if>
            <if test="divertForm != null  and divertForm != ''"> and divertForm = #{divertForm}</if>
            <if test="innovationClass != null "> and innovationClass = #{innovationClass}</if>
            <if test="studentSex != null  and studentSex != ''"> and studentSex = #{studentSex}</if>
            <if test="afterMajor != null  and afterMajor != ''"> and afterMajor = #{afterMajor}</if>
            <if test="afterAcademy != null  and afterAcademy != ''"> and afterAcademy = #{afterAcademy}</if>
            <if test="change_major_type != null  and change_major_type != ''"> and change_major_type = #{change_major_type}</if>
        </where>
    </select>
    
    <select id="selectStudentById" parameterType="Long" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where id = #{id}
    </select>

    <insert id="insertStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="id">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">studentId,</if>
            <if test="studentName != null and studentName != ''">studentName,</if>
            <if test="academy != null and academy != ''">academy,</if>
            <if test="systemMajor != null">systemMajor,</if>
            <if test="major != null">major,</if>
            <if test="studentClass != null">studentClass,</if>
            <if test="divertForm != null">divertForm,</if>
            <if test="innovationClass != null">innovationClass,</if>
            <if test="studentSex != null">studentSex,</if>
            <if test="afterMajor != null">afterMajor,</if>
            <if test="afterAcademy != null">afterAcademy,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">#{studentId},</if>
            <if test="studentName != null and studentName != ''">#{studentName},</if>
            <if test="academy != null and academy != ''">#{academy},</if>
            <if test="systemMajor != null">#{systemMajor},</if>
            <if test="major != null">#{major},</if>
            <if test="studentClass != null">#{studentClass},</if>
            <if test="divertForm != null">#{divertForm},</if>
            <if test="innovationClass != null">#{innovationClass},</if>
            <if test="studentSex != null">#{studentSex},</if>
            <if test="afterMajor != null">#{afterMajor},</if>
            <if test="afterAcademy != null">#{afterAcademy},</if>
            <if test="change_major_type != null">#{change_major_type},</if>
         </trim>
    </insert>
    <update id="updateStudent" parameterType="Student">
        update student
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">studentId = #{studentId},</if>
            <if test="studentName != null and studentName != ''">studentName = #{studentName},</if>
            <if test="academy != null and academy != ''">academy = #{academy},</if>
            <if test="systemMajor != null">systemMajor = #{systemMajor},</if>
            <if test="major != null">major = #{major},</if>
            <if test="studentClass != null">studentClass = #{studentClass},</if>
            <if test="divertForm != null">divertForm = #{divertForm},</if>
            <if test="innovationClass != null">innovationClass = #{innovationClass},</if>
            <if test="studentSex != null">studentSex = #{studentSex},</if>
            <if test="afterMajor != null">afterMajor = #{afterMajor},</if>
            <if test="afterAcademy != null">afterAcademy = #{afterAcademy},</if>
            <if test="change_major_type != null">change_major_type = #{change_major_type},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStudentById" parameterType="Long">
        delete from student where id = #{id}
    </delete>

    <delete id="deleteStudentByIds" parameterType="String">
        delete from student where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>